// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Realty.Models;
using System;

namespace Realty.Migrations
{
    [DbContext(typeof(RealtyContext))]
    [Migration("20180501050618_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Realty.Models.Photo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("ImageData");

                    b.Property<int?>("PropertyID");

                    b.HasKey("ID");

                    b.HasIndex("PropertyID");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("Realty.Models.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Bathrooms");

                    b.Property<int>("Bedrooms");

                    b.Property<string>("City");

                    b.Property<DateTime>("DateListed");

                    b.Property<string>("Description");

                    b.Property<string>("GarageSize");

                    b.Property<int>("LotSize");

                    b.Property<string>("Neighborhood");

                    b.Property<float>("SalesPrice");

                    b.Property<int>("SquareFeet");

                    b.Property<string>("State");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<int>("ZipCode");

                    b.HasKey("ID");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("Realty.Models.Photo", b =>
                {
                    b.HasOne("Realty.Models.Property")
                        .WithMany("Photos")
                        .HasForeignKey("PropertyID");
                });
#pragma warning restore 612, 618
        }
    }
}
